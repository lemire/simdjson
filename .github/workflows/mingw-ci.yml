name: MinGW32-CI

on: push


# Important: scoop will either install 32-bit GCC or 64-bit GCC, not both.

# It is important to build static libraries because cmake is not smart enough under Windows/mingw to take care of the path. So
# with a dynamic library, you could get failures due to the fact that the EXE can't find its DLL.
jobs:
  ci:
    name: windows-gcc
    runs-on: windows-2016

    env:
      CMAKE_GENERATOR: Ninja # This is critical, try ' cmake  -GNinja-DSIMDJSON_BUILD_STATIC=ON .. ' if using the command line
      CC: gcc
      CXX: g++

    steps: # To reproduce what is below, start a powershell with administrative rights, using scoop *is* a good idea
      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        id: cache
        with:
          path: C:/ProgramData/scoop
          key: scoop32


      - name: Setup Windows
        if: steps.cache.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          Invoke-Expression (New-Object System.Net.WebClient).DownloadString('https://get.scoop.sh')
          
          scoop install sudo --global
          sudo scoop install git --global 
          sudo scoop install ninja --global
          sudo scoop install gcc --arch 32bit --global 
          echo "::set-env name=CC::gcc"
          echo "::set-env name=CXX::g++"
          echo "::set-env name=PATH::$env:PATH"

      - name: Build and Test 32-bit x86
        run: |
          mkdir build32
          cd build32
          cmake -DSIMDJSON_BUILD_STATIC=ON ..
          cmake --build . --target basictests --verbose
          ctest . -R basictests  --output-on-failure

# You might wonder why we are running only one test (basictests). Well, it is because
# otherwise, github actions timeout on us.
