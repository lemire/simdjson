language: cpp
dist: bionic
arch:
  - ppc64le
matrix:
  include:
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-8
      env:
         - COMPILER="CC=gcc-8 && CXX=g++-8"

    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-6.0
          packages:
            - clang-6.0
      env:
        - COMPILER="CC=clang-6.0 && CXX=clang++-6.0"

    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-xenial-8
          packages:
            - clang-8
      env:
        - COMPILER="CC=clang-8 && CXX=clang++-8"


before_install:
  - eval "${COMPILER}"

script:
  - if [[ "${TRAVIS_CPU_ARCH}" == "ppc64le" ]]; then
      sudo apt-get install libuv1 rhash libstdc++6;
      wget https://anaconda.org/conda-forge/cmake/3.17.0/download/linux-ppc64le/cmake-3.17.0-hfb1cb51_0.tar.bz2;
      mkdir $HOME/cmake;
      tar -xjf cmake-3.17.0-hfb1cb51_0.tar.bz2 -C $HOME/cmake;
      export PATH=$HOME/cmake/bin:$PATH;
    fi
  - export CMAKE_FLAGS="-DSIMDJSON_BUILD_STATIC=ON -DSIMDJSON_IMPLEMENTATION=ppc64;fallback"
  - export CTEST_FLAGS="-j4 --output-on-failure -E checkperf"
  - mkdir build
  - cd build
  - cmake $CMAKE_FLAGS ..
  - cmake --build . -- -j
  - SIMDJSON_FORCE_IMPLEMENTATION=ppc64 ctest $CTEST_FLAGS -L per_implementation
  - SIMDJSON_FORCE_IMPLEMENTATION=fallback ctest $CTEST_FLAGS -L per_implementation
  - ctest $CTEST_FLAGS -LE "acceptance|per_implementation"
